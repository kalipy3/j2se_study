锁分为两类：
1.悲观锁：synchronized是独占锁即悲观锁，会导致其它所有需要锁的线程挂起，等待持有锁的线程释放锁

2.乐观锁：每次不加锁而是假设没有冲突的去完成某个任务操作，如果因为冲突失败就重试，直到成功为止

Compare and Swap 比较并交换：
乐观锁的实现：
有3个值：一个当前内存值V，旧的预期值A,将更新的值B，先获取到内存中当前的内存值V，在将内存值V与原值A比较，若相等就修改为要修改的值B并返回true，否则什么都不做，返回false

cas是一组由硬件提供原子操作，不会被外界打断，效率比加锁高

aba问题：变量a改成b,再改回a，cas会误以为它没有被更改过
